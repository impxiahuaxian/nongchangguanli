<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.farm.dao.CropsDao">
    <resultMap id="BaseResultMap" type="com.farm.entity.Crops">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="cropsName" jdbcType="VARCHAR" property="cropsname"/>
        <result column="area" jdbcType="REAL" property="area"/>
        <result column="profit" jdbcType="REAL" property="profit"/>
        <result column="cropsTime" jdbcType="INTEGER" property="cropstime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, cropsName, area, profit, cropsTime
  </sql>
    <select id="selectByExample" parameterType="com.farm.entity.CropsExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from crops
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from crops
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from crops
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.farm.entity.CropsExample">
        delete from crops
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.farm.entity.Crops">
    insert into crops (id, cropsName, area,
      profit, cropsTime)
    values (#{id,jdbcType=INTEGER}, #{cropsname,jdbcType=VARCHAR}, #{area,jdbcType=REAL},
      #{profit,jdbcType=REAL}, #{cropstime,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.farm.entity.Crops">
        insert into crops
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="cropsname != null">
                cropsName,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="profit != null">
                profit,
            </if>
            <if test="cropstime != null">
                cropsTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="cropsname != null">
                #{cropsname,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                #{area,jdbcType=REAL},
            </if>
            <if test="profit != null">
                #{profit,jdbcType=REAL},
            </if>
            <if test="cropstime != null">
                #{cropstime,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.farm.entity.CropsExample" resultType="java.lang.Long">
        select count(*) from crops
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update crops
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.cropsname != null">
                cropsName = #{record.cropsname,jdbcType=VARCHAR},
            </if>
            <if test="record.area != null">
                area = #{record.area,jdbcType=REAL},
            </if>
            <if test="record.profit != null">
                profit = #{record.profit,jdbcType=REAL},
            </if>
            <if test="record.cropstime != null">
                cropsTime = #{record.cropstime,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update crops
        set id = #{record.id,jdbcType=INTEGER},
        cropsName = #{record.cropsname,jdbcType=VARCHAR},
        area = #{record.area,jdbcType=REAL},
        profit = #{record.profit,jdbcType=REAL},
        cropsTime = #{record.cropstime,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.farm.entity.Crops">
        update crops
        <set>
            <if test="cropsname != null">
                cropsName = #{cropsname,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=REAL},
            </if>
            <if test="profit != null">
                profit = #{profit,jdbcType=REAL},
            </if>
            <if test="cropstime != null">
                cropsTime = #{cropstime,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.farm.entity.Crops">
    update crops
    set cropsName = #{cropsname,jdbcType=VARCHAR},
      area = #{area,jdbcType=REAL},
      profit = #{profit,jdbcType=REAL},
      cropsTime = #{cropstime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>