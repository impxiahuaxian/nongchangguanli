<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.farm.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.farm.entity.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_pass" jdbcType="VARCHAR" property="userPass"/>
        <result column="user_email" jdbcType="VARCHAR" property="userEmail"/>
        <result column="register_time" jdbcType="TIMESTAMP" property="registerTime"/>
        <result column="status" jdbcType="BIT" property="status"/>
        <result column="role" jdbcType="VARCHAR" property="role"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, user_name, user_pass, user_email, register_time, status,role
  </sql>
    <select id="selectByExample" parameterType="com.farm.entity.UserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from usertable
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from usertable
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from usertable
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.farm.entity.UserExample">
        delete from usertable
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <!--<insert id="insert" parameterType="com.farm.entity.User">-->
    <!--insert into usertable (id, user_name, user_pass,-->
    <!--user_email, register_time, status-->
    <!--)-->
    <!--values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPass,jdbcType=VARCHAR},-->
    <!--#{userEmail,jdbcType=VARCHAR}, #{registerTime,jdbcType=TIMESTAMP}, #{status,jdbcType=BIT}-->
    <!--)-->
    <!--</insert>-->
    <insert id="insertSelective" parameterType="com.farm.entity.User">
        insert into usertable
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userPass != null">
                user_pass,
            </if>
            <if test="userEmail != null">
                user_email,
            </if>
            <if test="registerTime != null">
                register_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="role != null">
                role,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPass != null">
                #{userPass,jdbcType=VARCHAR},
            </if>
            <if test="userEmail != null">
                #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="registerTime != null">
                #{registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIT},
            </if>
            <if test="role != null">
                #{role,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.farm.entity.UserExample" resultType="java.lang.Long">
        select count(*) from usertable
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update usertable
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.userPass != null">
                user_pass = #{record.userPass,jdbcType=VARCHAR},
            </if>
            <if test="record.userEmail != null">
                user_email = #{record.userEmail,jdbcType=VARCHAR},
            </if>
            <if test="record.registerTime != null">
                register_time = #{record.registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=BIT},
            </if>
            <if test="record.role != null">
                role = #{record.role,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update usertable
        set id = #{record.id,jdbcType=INTEGER},
        user_name = #{record.userName,jdbcType=VARCHAR},
        user_pass = #{record.userPass,jdbcType=VARCHAR},
        user_email = #{record.userEmail,jdbcType=VARCHAR},
        role = #{record.role,jdbcType=VARCHAR},
        register_time = #{record.registerTime,jdbcType=TIMESTAMP},
        status = #{record.status,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.farm.entity.User">
        update usertable
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPass != null">
                user_pass = #{userPass,jdbcType=VARCHAR},
            </if>
            <if test="userEmail != null">
                user_email = #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="registerTime != null">
                register_time = #{registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIT},
            </if>
            <if test="role != null">
                role = #{role,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.farm.entity.User">
    update usertable
    set user_name = #{userName,jdbcType=VARCHAR},
      user_pass = #{userPass,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectById" resultType="com.farm.entity.User">
        SELECT *
        FROM usertable
        WHERE id=#{id}
    </select>
    <select id="selectByUserName" resultType="com.farm.entity.User">
        SELECT *
        FROM usertable
        WHERE user_name=#{userName}
    </select>
    <select id="selectByUserEmail" resultType="com.farm.entity.User">
        SELECT *
        FROM usertable
        WHERE user_email=#{userEmail}
    </select>
    <insert id="insert" keyProperty="id" parameterType="com.farm.entity.User">
        INSERT INTO usertable(user_name,user_pass,user_email,role)
        VALUES (#{userName},#{userPass},#{userEmail},#{role})
    </insert>
    <update id="changeStatus" keyProperty="id" parameterType="com.farm.entity.User">
        update usertable
        set status = ABS(status-1)
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>